import 'package:flutter/material.dart';
import 'package:flutter_form_builder/flutter_form_builder.dart';
import 'package:phono/screen/pages/exercise/symbolize/quizkeyboard.dart';
import 'package:phono/screen/style/config.dart';
import 'package:flutter/services.dart';
import 'package:phono/screen/style/palete.dart';

class QuizLayout extends StatelessWidget {
  QuizLayout({Key key}) : super(key: key);
TextEditingController myController = TextEditingController(text: "halo");
  @override
  Widget build(BuildContext context) {
    SizeConfig().init(context);
    return Column(
      children: <Widget>[
        Expanded(
          flex: 3,
          child: Container(
            color: Palete.bgQuiz,
            child: SingleChildScrollView(
              padding: EdgeInsets.only(
                top: SizeConfig.vertical * 2.5,
                left: SizeConfig.horizontal * 4.5,
                right: SizeConfig.horizontal * 4.5,
              ),
              child: Column(
                children: <Widget>[
                  Container(
                    child: Row(
                      mainAxisAlignment: MainAxisAlignment.spaceBetween,
                      children: <Widget>[
                        Container(
                          decoration: BoxDecoration(
                              color: Palete.pink,
                              boxShadow: [
                                new BoxShadow(
                                    color: Palete.shadowBlue,
                                    offset: new Offset(0.0, 3.5),
                                    spreadRadius: 0.1,
                                    blurRadius: 3)
                              ],
                              borderRadius: BorderRadius.circular(10)),
                          padding: EdgeInsets.only(
                            top: SizeConfig.vertical * 1.5,
                            bottom: SizeConfig.vertical * 1.5,
                            left: SizeConfig.horizontal * 3,
                            right: SizeConfig.horizontal * 3,
                          ),
                          child: Text(
                            "1/10",
                            style: TextStyle(
                                color: Palete.white,
                                fontSize: SizeConfig.horizontal * 5,
                                fontFamily: Palete.cabinMedium),
                          ),
                        ),
                        Container(
                          decoration: BoxDecoration(
                              color: Palete.white,
                              boxShadow: [
                                new BoxShadow(
                                    color: Palete.shadowBlue,
                                    offset: new Offset(0.0, 3.5),
                                    spreadRadius: 0.1,
                                    blurRadius: 3)
                              ],
                              borderRadius: BorderRadius.circular(10)),
                          padding: EdgeInsets.only(
                            top: SizeConfig.vertical * 1.5,
                            bottom: SizeConfig.vertical * 1.5,
                            left: SizeConfig.horizontal * 3,
                            right: SizeConfig.horizontal * 3,
                          ),
                          child: Text(
                            "Score : 0",
                            style: TextStyle(
                                color: Color.fromRGBO(46, 85, 144, 1),
                                fontSize: SizeConfig.horizontal * 5,
                                fontFamily: Palete.cabinMedium),
                          ),
                        ),
                      ],
                    ),
                  ),
                  Container(
                    alignment: Alignment.centerLeft,
                    margin: EdgeInsets.only(
                      top: SizeConfig.vertical * 6,
                      left: SizeConfig.horizontal * 3,
                    ),
                    child: Text(
                      "Resign",
                      style: TextStyle(
                          fontSize: SizeConfig.horizontal * 8,
                          fontFamily: Palete.cabinSemiBold,
                          color: Color.fromRGBO(41, 86, 127, 1)),
                    ),
                  ),
                  Container(
                    margin: EdgeInsets.only(
                      top: SizeConfig.vertical * 4,
                      left: SizeConfig.horizontal * 3,
                      right: SizeConfig.horizontal * 3,
                    ),
                    decoration: BoxDecoration(
                      color: Color.fromRGBO(249, 250, 252, 1)
                    ),
                    child: NoKeyboardEditableText(
                      controller: myController,
                      cursorColor: Palete.blueMenu,
                      autofocus: true,
                      selectionColor: Palete.bgGrey,
                      style: TextStyle(
                        fontSize: SizeConfig.horizontal *7,
                       color: Color.fromRGBO(108, 108, 108, 1),
                      ),
                    )
                  ),
                ],
              ),
            ),
          ),
        ),
        Container(
          child: Expanded(
              flex: 2,
              child: Stack(
                children: <Widget>[
                  quizKeyboard(context),
                ],
              )),
        )
      ],
    );
  }
}

class NoKeyboardEditableText extends EditableText {
  NoKeyboardEditableText(
      {@required TextEditingController controller,
      @required TextStyle style,
      @required Color cursorColor,
      bool autofocus = false,
      Color selectionColor})
      : super(
            controller: controller,

            focusNode: NoKeyboardEditableTextFocusNode(),
            style: style,
            cursorColor: cursorColor,
            autofocus: autofocus,
            selectionColor: selectionColor,
            backgroundCursorColor: Colors.black,
            
            
            );

  @override
  EditableTextState createState() {
    return NoKeyboardEditableTextState();
  }
}

class NoKeyboardEditableTextState extends EditableTextState {
  @override
  void requestKeyboard() {
    super.requestKeyboard();
    //hide keyboard
    SystemChannels.textInput.invokeMethod('TextInput.hide');
  }
}

class NoKeyboardEditableTextFocusNode extends FocusNode {
  @override
  bool consumeKeyboardToken() {
    // prevents keyboard from showing on first focus
    return false;
  }
}
